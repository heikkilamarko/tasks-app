apiVersion: v1
kind: Namespace
metadata:
  name: tasks-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tasks-app
  namespace: tasks-app
data:
  APP_SHARED_SERVICES: db:postgres,attachments:nats,messaging:nats
  APP_SHARED_MODULES: ui,taskchecker,emailnotifier:smtp
  APP_SHARED_LOG_LEVEL: info
  APP_SHARED_NATS_URL: nats://nats-0.nats-headless.examples.svc.cluster.local:4222, nats://nats-1.nats-headless.examples.svc.cluster.local:4222, nats://nats-2.nats-headless.examples.svc.cluster.local:4222
  APP_SHARED_NATS_CREDS: /app.cred
  APP_SHARED_NATS_ACCOUNT_PUBLIC_KEY: ${NATS_ACCOUNT_PUBLIC_KEY}
  APP_SHARED_ATTACHMENTS_PATH: attachments
  APP_UI_ADDR: ":8080"
  APP_UI_AUTH_DOMAIN: zitadel.local
  APP_UI_AUTH_CLIENT_ID: "${ZITADEL_CLIENT_ID}"
  APP_UI_AUTH_REDIRECT_URI: https://tasks-app.local/ui/auth/callback
  APP_UI_HUB_JWT_COOKIE_NAME: nats.jwt
  APP_UI_TRUSTED_HOSTS: tasks-app.local
  APP_TASK_CHECKER_CHECK_INTERVAL: 15s
  APP_TASK_CHECKER_EXPIRING_WINDOW: 24h
  APP_TASK_CHECKER_DELETE_WINDOW: 48h
  APP_EMAIL_NOTIFIER_ZITADEL_URL: https://zitadel.local
  APP_EMAIL_NOTIFIER_SMTP_HOST: smtp4dev.examples.svc.cluster.local
  APP_EMAIL_NOTIFIER_SMTP_PORT: "25"
  APP_EMAIL_NOTIFIER_SMTP_FROM_NAME: Tasks App
  APP_EMAIL_NOTIFIER_SMTP_FROM_ADDRESS: no-reply@tasks-app.local
---
apiVersion: v1
kind: Secret
metadata:
  name: tasks-app
  namespace: tasks-app
stringData:
  POSTGRES_POSTGRES_CONNECTIONSTRING: postgres://postgres:S3c_r3t!@postgresql.examples.svc.cluster.local:5432/postgres?sslmode=disable&search_path=public
  POSTGRES_TASKS_APP_CONNECTIONSTRING: postgres://postgres:S3c_r3t!@postgresql.examples.svc.cluster.local:5432/tasks_app?sslmode=disable&search_path=public
  APP_SHARED_POSTGRES_CONNECTION_STRING: postgres://postgres:S3c_r3t!@postgresql.examples.svc.cluster.local:5432/tasks_app?sslmode=disable
  APP_SHARED_NATS_ACCOUNT_SEED: ${NATS_ACCOUNT_SEED}
  APP_UI_AUTH_ENCRYPTION_KEY: secret12secret12
  APP_EMAIL_NOTIFIER_ZITADEL_PAT: ${ZITADEL_EMAIL_NOTIFIER_PAT}
  APP_EMAIL_NOTIFIER_SMTP_PASSWORD: empty
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-app
  namespace: tasks-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasks-app
  template:
    metadata:
      labels:
        app: tasks-app
    spec:
      hostAliases:
        - ip: ${ZITADEL_IP}
          hostnames:
            - zitadel.local
      initContainers:
        - name: tasks-app-migrations
          image: ${IMAGE_MIGRATIONS}
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: tasks-app
            - secretRef:
                name: tasks-app
      containers:
        - name: tasks-app
          image: ${IMAGE}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: tasks-app
            - secretRef:
                name: tasks-app
          volumeMounts:
            - name: nats-app-cred
              readOnly: true
              mountPath: /app.cred
              subPath: app.cred
      volumes:
        - name: nats-app-cred
          secret:
            secretName: nats-app-cred
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-app
  namespace: tasks-app
spec:
  selector:
    app: tasks-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-app-external
  namespace: tasks-app
spec:
  type: ExternalName
  externalName: nats.examples.svc.cluster.local
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix
  namespace: tasks-app
spec:
  stripPrefix:
    prefixes:
      - /ws
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tasks-app
  namespace: tasks-app
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: tasks-app-strip-prefix@kubernetescrd
spec:
  rules:
    - host: tasks-app.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tasks-app
                port:
                  number: 80
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: tasks-app-external
                port:
                  number: 8080
