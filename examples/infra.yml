version: "3.9"

services:
  caddy:
    build: ../proxy/caddy
    image: tasks-app/caddy
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/caddy.env
    secrets:
      - source: root.key
        target: /etc/caddy/certs/root.key
      - source: root.crt
        target: /etc/caddy/certs/root.crt
    ports:
      - "443:443"
    networks:
      tasks-app:
        aliases:
          - www.tasks-app.com
          - auth.tasks-app.com

  # traefik:
  #   build: ../proxy/traefik
  #   image: tasks-app/traefik
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #   env_file:
  #     - ../config/dev/traefik.env
  #   secrets:
  #     - source: root.key
  #       target: /etc/traefik/certs/root.key
  #     - source: root.crt
  #       target: /etc/traefik/certs/root.crt
  #   ports:
  #     - "443:443"
  #   networks:
  #     tasks-app:
  #       aliases:
  #         - www.tasks-app.com
  #         - auth.tasks-app.com

  zitadel:
    build: ../iam/zitadel
    image: tasks-app/zitadel
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/zitadel.env
    ports:
      - "8080:8080"
    volumes:
      - ./zitadel/machinekey:/machinekey
      # - /home/raspi/zitadel/machinekey:/machinekey
    networks:
      - tasks-app
    depends_on:
      - postgres

  postgres:
    build: ../db/postgres
    image: tasks-app/postgres
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - tasks-app

  postgres-migrations:
    build: ../db/postgres-migrations
    image: tasks-app/postgres-migrations
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/postgres-migrations.env
    networks:
      - tasks-app
    depends_on:
      - postgres

  nats-1:
    build: ../messaging/nats
    image: tasks-app/nats
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/nats.env
      - ../config/dev/nats-1.env
    ports:
      - "4222:4222"
      - "8222:8222"
      - "9222:9222"
    volumes:
      - nats-1:/nats
    networks:
      - tasks-app

  nats-2:
    build: ../messaging/nats
    image: tasks-app/nats
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/nats.env
      - ../config/dev/nats-2.env
    volumes:
      - nats-2:/nats
    networks:
      - tasks-app

  nats-3:
    build: ../messaging/nats
    image: tasks-app/nats
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/nats.env
      - ../config/dev/nats-3.env
    volumes:
      - nats-3:/nats
    networks:
      - tasks-app

  nats-configure:
    build: ../messaging/nats-configure
    image: tasks-app/nats-configure
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../config/dev/nats-configure.env
    secrets:
      - source: admin_user.creds
        target: /admin_user.creds
    networks:
      - tasks-app
    depends_on:
      - nats-1
      - nats-2
      - nats-3

secrets:
  root.key:
    file: ./certs/root.key
  root.crt:
    file: ./certs/root.crt
  admin_user.creds:
    file: ./nats/nsc/keys/creds/tasks_app_operator/tasks_app_account/admin_user.creds

networks:
  tasks-app:
    name: tasks-app

volumes:
  postgres:
  nats-1:
  nats-2:
  nats-3:
